
<!-- 
to escape brackets like <>, [], use CDATA       
<![CDATA[ price < 500 ]]>
-->

<!-- MAPPER userRepository.js -->
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cardMapper">  

    <!-- add a single card -->
    <insert id="addCard">
        INSERT INTO cards VALUES
        (#{user}, #{card_name}, #{theme}, #{grade}, #{level})   
    </insert>


    <!-- add multiple cards -->
    <insert id ="addManyCards">
        INSERT INTO cards VALUES
        <foreach collection="list" item="card" open="(" close=")" separator=",">
            #{user}, 'MOMO', '21:29', 'A', 1
        </foreach>
    </insert>

    <!-- select all cards a user has -->
    <select id="selectCardsUser">
        SELECT * FROM cards
        WHERE
            "user" = #{user}
    </select>

    <!-- select all cards a user has with specific theme -->
    <select id="selectCardsTheme">
        SELECT * FROM cards
        WHERE
            "user" = #{user} AND theme = {theme}
    </select>

    <!-- Maintainance ONLY! -->
    <!-- select all theme definitions -->
    <select id="getAllThemeDefs">
        SELECT * FROM def_themes
        <if test="excludeLimitedThemes = true">
            WHERE b_limited = FALSE
        </if>
    </select>

    <select id="getAllCardDefs">
        SELECT * FROM def_artists_cards
    </select>
    <!-- select all possible cards -->
    <select id="selectAllCardTypes">
        SELECT 
            cd.id AS card_name,
            pd.id AS artist,
            pd.group AS "group",
            td.id AS theme,
            td.date_updated AS themeUpdateDate,
            td.b_limited AS isLimitedTheme
        FROM def_artists_cards cd
        INNER JOIN def_artists_person pd ON pd.id = cd.artist
        INNER JOIN def_themes td ON pd.group = td.group_id
        <if test="excludeLimitedThemes = true">
            WHERE b_limited = FALSE
        </if>
    </select>
    <!-- delete a single user with id -->
    <delete id="deleteCard">
        DELETE FROM cards
        WHERE card_id IN(
            SELECT MAX(card_id) FROM
                (SELECT card_id
                FROM cards
                WHERE 
                    "user" = #{user} AND
                    card_name = #{cardName}	AND
                    theme = #{theme} AND
                    grade = #{grade} AND
                    "level" = #{level}
                ) sc
            )
            
    </delete>

    <delete id="deleteAllWithUser">
        DELETE FROM cards
        WHERE user = #{user}
    </delete>
    <!-- flush database -->
    <delete id="flushTable">
        DELETE FROM cards
    </delete>

</mapper>

